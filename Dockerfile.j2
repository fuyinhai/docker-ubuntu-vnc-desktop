# Built with arch: {{ arch }} flavor: {{ flavor }} image: {{ image }}
#
################################################################################
# base system
################################################################################

{%if arch == "amd64"%}
FROM {{image}} as system
{%elif arch == "armhf"%}
# qemu helper for arm build
FROM {{image}} as amd64
RUN apt update && apt install -y qemu-user-static
FROM arm32v7/{{image}} as system
COPY --from=amd64 /usr/bin/qemu-arm-static /usr/bin/
{%endif%}

{%if desktop == "kylin" %}

{%else%}

COPY sources.list /etc/apt/sources.list

{%endif%}

RUN dpkg-divert --local --rename --add /sbin/initctl && ln -sf /bin/true /sbin/initctl

{%if desktop == "kylin" %}
RUN mkdir /var/run -p
RUN mkdir /run
{%endif%}
RUN ln -fs /usr/share/zoneinfo/Asia/Shanghai /etc/localtime && \
    apt-get update -q && \
    apt-get install -y --no-install-recommends tzdata

RUN dpkg-reconfigure -f noninteractive tzdata

RUN apt install -y --no-install-recommends --allow-unauthenticated locales && \
    sed -i -e 's/# zh_CN.UTF-8 UTF-8/zh_CN.UTF-8 UTF-8/' /etc/locale.gen && \
    dpkg-reconfigure --frontend=noninteractive locales && \
    update-locale LANG=zh_CN.UTF-8 && \
    locale-gen zh_CN.UTF-8

ENV LANG zh_CN.UTF-8
ENV LANGUAGE zh_CN:zh
ENV LC_ALL zh_CN.UTF-8

RUN apt install language-pack-zh-hans fonts-droid-fallback ttf-wqy-zenhei ttf-wqy-microhei fonts-arphic-ukai fonts-arphic-uming -y \
    && echo 'LANG="zh_CN.UTF-8"' >> /etc/environment \
    && echo 'LANGUAGE="zh_CN:zh:en_US:en"' >> /etc/environment \
    && echo 'en_US.UTF-8 UTF-8' > /var/lib/locales/supported.d/local \
    && echo 'zh_CN.UTF-8 UTF-8' > /var/lib/locales/supported.d/local \
    && echo 'zh_CN.GBK GBK' > /var/lib/locales/supported.d/local \
    && echo 'zh_CN GB2312' > /var/lib/locales/supported.d/local

# built-in packages
ENV DEBIAN_FRONTEND noninteractive
RUN apt update \
    && apt install -y --no-install-recommends software-properties-common curl apache2-utils apt-utils \
    && apt update \
    && apt install -y --no-install-recommends --allow-unauthenticated \
        supervisor nginx sudo net-tools zenity xz-utils \
        dbus-x11 x11-utils alsa-utils \
        mesa-utils libgl1-mesa-dri \
    && apt autoclean -y \
    && apt autoremove -y \
    && rm -rf /var/lib/apt/lists/*

# install debs error if combine together
RUN apt update \
    && apt install -y --no-install-recommends --allow-unauthenticated \
        xvfb x11vnc \
        {%if desktop == "gnome" %}vim-tiny xfce4-terminal{%endif%} {%if desktop == "lxde" %}vim-tiny ttf-ubuntu-font-family ttf-wqy-zenhei{%endif%} {%if desktop == "lxqt" %}vim-tiny ttf-ubuntu-font-family ttf-wqy-zenhei openbox{%endif%} {%if desktop == "xfce4" %}vim-tiny xfce4-terminal{%endif%} curl

COPY rootfs /

RUN apt update \
    && apt install -y gpg-agent \
    && (dpkg -i /chrome.deb || apt-get install -fy)

{%if desktop == "kylin" %}
{%else%}
RUN apt update
RUN apt  install -y --no-install-recommends --allow-unauthenticated gtk2-engines-murrine gnome-themes-standard gtk2-engines-pixbuf arc-theme mate-indicator-applet
{%endif%}

RUN apt update \
    && apt install -y --no-install-recommends --allow-unauthenticated {%if desktop == "lxde" %}lxde{%endif%} {%if desktop == "lxqt" %}lxqt{%endif%} {%if desktop == "xfce4" %}xfce4{%endif%} curl \
    && apt autoclean -y \
    && apt autoremove -y \
    && rm -rf /var/lib/apt/lists/*

# tini to fix subreap
ARG TINI_VERSION=v0.18.0
ADD https://github.com/krallin/tini/releases/download/${TINI_VERSION}/tini /bin/tini
RUN chmod +x /bin/tini

# ffmpeg
RUN apt update \
    && apt install -y --no-install-recommends --allow-unauthenticated \
        ffmpeg \
    && rm -rf /var/lib/apt/lists/* \
    && mkdir /usr/local/ffmpeg \
    && ln -s /usr/bin/ffmpeg /usr/local/ffmpeg/ffmpeg

# python library
RUN apt-get update \
    && dpkg-query -W -f='${Package}\n' > /tmp/a.txt \
    && apt-get install -y python3-pip python3-dev build-essential \
    && pip3 install setuptools wheel --trusted-host mirrors.aliyun.com \
    && pip3  install -r /usr/local/lib/web/backend/requirements.{%if desktop == "kylin"%}kylin{%else%}txt{%endif%} --trusted-host mirrors.aliyun.com \
    && ln -s /usr/bin/python3 /usr/local/bin/python \
    && dpkg-query -W -f='${Package}\n' > /tmp/b.txt \
    && apt-get remove -y `diff --changed-group-format='%>' --unchanged-group-format='' /tmp/a.txt /tmp/b.txt | xargs` \
    && apt-get autoclean -y \
    && apt-get autoremove -y

# Gnome
{%if desktop == "gnome" %}
RUN apt update \
    && apt install -y --no-install-recommends --allow-unauthenticated \
       apt-transport-https wget vim netcat openssh-server gpg-agent repo \
       xorg ubuntu-desktop ubuntu-gnome-desktop gnome-core gnome-panel metacity nautilus --fix-missing
{%endif%}

RUN apt-get update \
    && apt-get autoclean -y \
    && apt-get autoremove -y \
    && rm /chrome.deb \
    && rm /usr/local/lib/web/backend/requirements.txt

EXPOSE 80
WORKDIR /root
ENV HOME=/root \
    SHELL=/bin/bash
HEALTHCHECK --interval=30s --timeout=5s CMD curl --fail http://127.0.0.1:6079/api/health
ENTRYPOINT ["/startup.sh"]

